{"ast":null,"code":"// the image that appears when 'surface geology' content is active\n\nimport { planetData } from \"../globals.js\";\nimport { currentPlanet } from \"../globals.js\";\nimport { previousPlanet } from \"../globals.js\";\nimport { planetImg } from \"../globals.js\";\nimport { statValues } from \"../globals.js\";\nimport { standupTextWrapper } from \"../globals.js\";\nimport { standupLettersAnim } from \"../animations.js\";\nimport { flyOutAnim } from \"../animations.js\";\nimport { scaleInAnim } from \"../animations.js\";\nimport { roundNumbersAnim } from \"../animations.js\";\nimport { flyInAnimComplete } from \"../animations.js\";\nimport { staggerLeftAnim } from \"../animations.js\";\nconst toggle = document.querySelector('.toggle'); //mobile hamburger button\nconst toggleItems = document.querySelectorAll('.toggle-item'); //mobile menu planet anchor links\nconst body = document.querySelector('body'); // this is to disable scrolling when the mobile menu is open\nconst menuContent = document.querySelector('.menu__content'); // overview structure surface menu\nconst contentLinks = document.querySelectorAll('.content-link'); // overview or structure or surface anchor link\nconst planetLinks = document.querySelectorAll('.planet-link'); // planet named menu anchor links\nlet currentContent = 'overview';\n// eslint-disable-next-line no-unused-vars\nlet previousContent = '';\nlet currentIndex = 2; // keep track of which planet object in the json file 'planetData' we are accessing\nconst changePlanet = document.querySelectorAll('.change-planet'); // all elements that change based on the currently selected planet\nconst changeContent = document.querySelectorAll('.change-content'); // all elements that change based on overview structure or surface\nconst planetGeoImg = document.querySelector('.planet-geo-img');\n\n// mobile hamburger button behavior\ntoggle.addEventListener('click', () => {\n  body.classList.toggle('noscroll');\n  toggle.classList.toggle('toggle-active');\n  menuContent.classList.toggle('hide');\n  toggleItems.forEach(ele => {\n    // toggle items are the mobile only links\n    ele.classList.toggle('active');\n  });\n  staggerLeftAnim('.toggle-item');\n});\n\n// when we click a link\nplanetLinks.forEach(link => {\n  link.addEventListener('click', () => {\n    switchPlanet(link.classList[1], link.classList[2]); // The [2] class must always be the planet name\n\n    if (link.parentElement.classList.contains('toggle-item')) {\n      // if on mobile\n      toggle.classList.remove('toggle-active');\n      body.classList.toggle('noscroll');\n      menuContent.classList.remove('hide');\n      toggleItems.forEach(item => {\n        // toggle items are the mobile only links\n        item.classList.remove('active'); // on mobile, active shows and hides the links\n      });\n    }\n\n    if (link.parentElement.classList.contains('hide-for-mobile')) {\n      // if on tablet\n      planetLinks.forEach(ele => {\n        // remove the active class from all links\n        ele.classList.remove('active'); // on tablet, the active class shows the ::after element with planet specific colors\n      });\n\n      link.classList.add('active'); // only add active to one link\n    }\n  });\n});\n\n// when we click overview, internal, or surface links\ncontentLinks.forEach(link => {\n  link.addEventListener('click', () => {\n    if (flyInAnimComplete) {\n      // cannot click buttons and interfere with the animation and cause bugs\n      if (!link.classList.contains('content-active'))\n        // cannot click buttons that are already active\n        switchContent(link.classList[1]);\n      contentLinks.forEach(otherLink => {\n        otherLink.classList.remove('content-active');\n      });\n      link.classList.add('content-active');\n    }\n  });\n});\nfunction switchPlanet(planetName, index) {\n  if (planetName === currentPlanet) return null; // cannot change to the same planet thats already active\n  previousPlanet.planetName = currentPlanet.planetName;\n  currentPlanet.planetName = planetName;\n  currentIndex = index;\n  flyOutAnim(planetImg);\n  switchContent('overview');\n  if (currentPlanet.planetName) {\n    console.log('The current planet is ' + currentPlanet.planetName);\n  } else {\n    console.error('ERROR planet name not found. The planet name must be the second class on the planet-links element. Do not remove or change this element.');\n  }\n\n  // change each element to match the currently selected planet\n  // The planet image is changed by the flyOutAnim() function, not here\n  changePlanet.forEach(ele => {\n    if (ele.classList.contains('animLetters')) {\n      ele.innerHTML = planetData[currentIndex].name;\n      standupLettersAnim(standupTextWrapper, 'animLetter');\n    }\n    if (ele.classList.contains('rotation')) {\n      ele.innerHTML = planetData[currentIndex].rotation;\n    }\n    if (ele.classList.contains('revolution')) {\n      ele.innerHTML = planetData[currentIndex].revolution;\n    }\n    if (ele.classList.contains('radius')) {\n      ele.innerHTML = planetData[currentIndex].radius;\n    }\n    if (ele.classList.contains('temperature')) {\n      ele.innerHTML = planetData[currentIndex].temperature;\n    }\n  });\n  roundNumbersAnim(statValues);\n\n  // change the coloring to match the current planet only if we are not on mobile\n  contentLinks.forEach(link => {\n    link.classList.remove(previousPlanet.planetName);\n    link.classList.add(currentPlanet.planetName);\n  });\n}\n\n// change all elements related to the currently selected content\nfunction switchContent(content) {\n  currentContent = content;\n  previousContent = currentContent;\n  changeContent.forEach(ele => {\n    // eslint-disable-next-line default-case\n    switch (content) {\n      case 'overview':\n        scaleInAnim(planetImg);\n        contentLinks.forEach(link => {\n          if (link.classList.contains('overview')) {\n            link.classList.add('content-active');\n          } else {\n            link.classList.remove('content-active');\n          }\n        });\n        if (ele.classList.contains('planet-img')) {\n          ele.src = planetData[currentIndex].images.planet;\n          ele.classList.remove(ele.classList[2]); //remove the current planet name class with sizing rules\n          ele.classList.add(planetData[currentIndex].name.toLowerCase());\n        }\n        planetGeoImg.classList.add('hide');\n        if (ele.classList.contains('planet__paragraph')) ele.innerHTML = planetData[currentIndex].overview.content;\n        if (ele.classList.contains('source')) ele.href = planetData[currentIndex].overview.source;\n        break;\n      case 'structure':\n        scaleInAnim(planetImg);\n        if (ele.classList.contains('planet-img')) {\n          ele.src = planetData[currentIndex].images.internal;\n        }\n        planetGeoImg.classList.add('hide');\n        if (ele.classList.contains('planet__paragraph')) ele.innerHTML = planetData[currentIndex].structure.content;\n        if (ele.classList.contains('source')) ele.href = planetData[currentIndex].structure.source;\n        break;\n      case 'geology':\n        scaleInAnim(planetGeoImg);\n        if (ele.classList.contains('planet-img')) {\n          ele.src = planetData[currentIndex].images.planet;\n        }\n        planetGeoImg.src = planetData[currentIndex].images.geology;\n        planetGeoImg.classList.remove('hide');\n        if (ele.classList.contains('planet__paragraph')) ele.innerHTML = planetData[currentIndex].geology.content;\n        if (ele.classList.contains('source')) ele.href = planetData[currentIndex].geology.source;\n        break;\n    }\n  });\n}","map":{"version":3,"names":["planetData","currentPlanet","previousPlanet","planetImg","statValues","standupTextWrapper","standupLettersAnim","flyOutAnim","scaleInAnim","roundNumbersAnim","flyInAnimComplete","staggerLeftAnim","toggle","document","querySelector","toggleItems","querySelectorAll","body","menuContent","contentLinks","planetLinks","currentContent","previousContent","currentIndex","changePlanet","changeContent","planetGeoImg","addEventListener","classList","forEach","ele","link","switchPlanet","parentElement","contains","remove","item","add","switchContent","otherLink","planetName","index","console","log","error","innerHTML","name","rotation","revolution","radius","temperature","content","src","images","planet","toLowerCase","overview","href","source","internal","structure","geology"],"sources":["/Users/sambo/repos/planets-fact-site/src/index.js"],"sourcesContent":["// the image that appears when 'surface geology' content is active\n\nimport { planetData } from \"../globals.js\"\nimport { currentPlanet } from \"../globals.js\"\nimport { previousPlanet } from \"../globals.js\"\nimport { planetImg } from \"../globals.js\"\nimport { statValues } from \"../globals.js\"\nimport { standupTextWrapper } from \"../globals.js\"\nimport { standupLettersAnim } from \"../animations.js\"\nimport { flyOutAnim } from \"../animations.js\"\nimport { scaleInAnim } from \"../animations.js\"\nimport { roundNumbersAnim } from \"../animations.js\"\nimport { flyInAnimComplete } from \"../animations.js\"\nimport { staggerLeftAnim } from \"../animations.js\"\nconst toggle = document.querySelector('.toggle') //mobile hamburger button\nconst toggleItems = document.querySelectorAll('.toggle-item') //mobile menu planet anchor links\nconst body = document.querySelector('body') // this is to disable scrolling when the mobile menu is open\nconst menuContent = document.querySelector('.menu__content') // overview structure surface menu\nconst contentLinks = document.querySelectorAll('.content-link') // overview or structure or surface anchor link\nconst planetLinks = document.querySelectorAll('.planet-link') // planet named menu anchor links\nlet currentContent = 'overview'\n// eslint-disable-next-line no-unused-vars\nlet previousContent = ''\nlet currentIndex = 2 // keep track of which planet object in the json file 'planetData' we are accessing\nconst changePlanet = document.querySelectorAll('.change-planet') // all elements that change based on the currently selected planet\nconst changeContent = document.querySelectorAll('.change-content') // all elements that change based on overview structure or surface\nconst planetGeoImg = document.querySelector('.planet-geo-img')\n\n\n// mobile hamburger button behavior\ntoggle.addEventListener('click', () => {\n\n    body.classList.toggle('noscroll')\n    toggle.classList.toggle('toggle-active')\n    menuContent.classList.toggle('hide')\n\n    toggleItems.forEach(ele => { // toggle items are the mobile only links\n        ele.classList.toggle('active')\n    })\n    staggerLeftAnim('.toggle-item')\n})\n\n// when we click a link\nplanetLinks.forEach(link => {\n  link.addEventListener('click', () => {\n    switchPlanet(link.classList[1], link.classList[2]) // The [2] class must always be the planet name\n\n    if(link.parentElement.classList.contains('toggle-item')) { // if on mobile\n      toggle.classList.remove('toggle-active')\n      body.classList.toggle('noscroll')\n      menuContent.classList.remove('hide')\n      toggleItems.forEach(item => { // toggle items are the mobile only links\n        item.classList.remove('active') // on mobile, active shows and hides the links\n      })\n    }\n\n    if(link.parentElement.classList.contains('hide-for-mobile')) {  // if on tablet\n      planetLinks.forEach(ele => {     // remove the active class from all links\n        ele.classList.remove('active') // on tablet, the active class shows the ::after element with planet specific colors\n      })\n      link.classList.add('active') // only add active to one link\n    }\n  })\n})\n\n// when we click overview, internal, or surface links\ncontentLinks.forEach(link => {\n    link.addEventListener('click', () => {\n      if(flyInAnimComplete) { // cannot click buttons and interfere with the animation and cause bugs\n        if(!link.classList.contains('content-active')) // cannot click buttons that are already active\n        switchContent(link.classList[1])\n        contentLinks.forEach(otherLink => {\n            otherLink.classList.remove('content-active')\n        })\n        link.classList.add('content-active')\n      }\n    })\n})\n\nfunction switchPlanet(planetName, index) {\n  if(planetName === currentPlanet) return null // cannot change to the same planet thats already active\n    previousPlanet.planetName = currentPlanet.planetName\n    currentPlanet.planetName = planetName;\n    currentIndex = index\n    flyOutAnim(planetImg)\n    switchContent('overview')\n    if(currentPlanet.planetName) {\n        console.log('The current planet is ' + currentPlanet.planetName)\n    } else {\n        console.error('ERROR planet name not found. The planet name must be the second class on the planet-links element. Do not remove or change this element.')\n    }\n\n    // change each element to match the currently selected planet\n    // The planet image is changed by the flyOutAnim() function, not here\n    changePlanet.forEach(ele => {\n        if(ele.classList.contains('animLetters')) {\n            ele.innerHTML = planetData[currentIndex].name\n            standupLettersAnim(standupTextWrapper, 'animLetter')\n        }\n        if(ele.classList.contains('rotation')) {\n            ele.innerHTML = planetData[currentIndex].rotation\n        }\n        if(ele.classList.contains('revolution')) {\n            ele.innerHTML = planetData[currentIndex].revolution\n        }\n        if(ele.classList.contains('radius')) {\n            ele.innerHTML = planetData[currentIndex].radius\n        }\n        if(ele.classList.contains('temperature')) {\n            ele.innerHTML = planetData[currentIndex].temperature\n        }\n    })\n    roundNumbersAnim(statValues)\n\n    // change the coloring to match the current planet only if we are not on mobile\n    contentLinks.forEach(link => {\n      link.classList.remove(previousPlanet.planetName)\n      link.classList.add(currentPlanet.planetName)\n    })\n}\n\n// change all elements related to the currently selected content\nfunction switchContent(content) {\n  currentContent = content\n  previousContent = currentContent\n    changeContent.forEach(ele => {\n        // eslint-disable-next-line default-case\n        switch(content) {\n          case 'overview':\n            scaleInAnim(planetImg)\n            contentLinks.forEach(link => {\n                if(link.classList.contains('overview')) {\n                    link.classList.add('content-active')\n                } else {\n                    link.classList.remove('content-active')\n                }\n            })\n            if(ele.classList.contains('planet-img')) {\n                ele.src = planetData[currentIndex].images.planet\n                ele.classList.remove(ele.classList[2]) //remove the current planet name class with sizing rules\n                ele.classList.add(planetData[currentIndex].name.toLowerCase())\n            }\n            planetGeoImg.classList.add('hide')\n            if(ele.classList.contains('planet__paragraph')) ele.innerHTML = planetData[currentIndex].overview.content\n            if(ele.classList.contains('source')) ele.href = planetData[currentIndex].overview.source\n          break;\n          case 'structure':\n            scaleInAnim(planetImg)\n            if(ele.classList.contains('planet-img')) {\n                ele.src = planetData[currentIndex].images.internal\n            }\n            planetGeoImg.classList.add('hide')\n            if(ele.classList.contains('planet__paragraph')) ele.innerHTML = planetData[currentIndex].structure.content\n            if(ele.classList.contains('source')) ele.href = planetData[currentIndex].structure.source\n          break;\n          case 'geology':\n            scaleInAnim(planetGeoImg)\n            if(ele.classList.contains('planet-img')) {\n                ele.src = planetData[currentIndex].images.planet\n            }\n            planetGeoImg.src = planetData[currentIndex].images.geology\n            planetGeoImg.classList.remove('hide')\n            if(ele.classList.contains('planet__paragraph')) ele.innerHTML = planetData[currentIndex].geology.content\n            if(ele.classList.contains('source')) ele.href = planetData[currentIndex].geology.source\n          break;\n        }\n    })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}